name: Update Durations Files
on:
  # Scheduled trigger every Saturday at 2:47am UTC
  schedule:
  - cron: '47 2 * * 6'
  workflow_dispatch:
  pull_request:

concurrency:
  group: unit-tests-${{ github.ref }}
  cancel-in-progress: true

env:
  DURATIONS_BRANCH: bot/durations-update

jobs:
  update-durations:
    uses: ./.github/workflows/interface-unit-tests.yml
    secrets:
      codecov_token: ${{ secrets.CODECOV_TOKEN }}
    with:
      branch: ${{ github.ref }}
      pipeline_mode: 'update-durations'
      run_lightened_ci: true
      skip_ci_test_jobs: 'torch-tests,autograd-tests,all-interfaces-tests,external-libraries-tests,qcut-tests,qchem-tests,gradients-tests,data-tests,device-tests'

  # Add job for downloading artifacts and opening PR
  upload-durations-files:
    needs: update-durations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master
          # ref: ${{ github.ref }}

      - name: Prepare local repo
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          if git ls-remote --exit-code origin "refs/heads/${{ env.DURATIONS_BRANCH }}"; then
            git checkout "${{ env.DURATIONS_BRANCH }}"
          else
            git checkout -b "${{ env.DURATIONS_BRANCH }}"
          fi

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: durations-*
          path: .github/durations/
          merge-multiple: true

      - name: Determine if changes have been made
        id: changed
        run: |
          echo "bleh bleh" >> ./.github/durations/core_tests_durations.json
          echo "has_changes=$(git status --porcelain | wc -l | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Stage changes
        if: steps.changed.outputs.has_changes != '0'
        run: |
          git add .github/durations/
          git commit -m "Update durations files"
          git push -f --set-upstream origin "${{ env.DURATIONS_BRANCH }}"

      # Create PR to master
      - name: Create pull request
        if: steps.changed.outputs.has_changes != '0'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: 'Update test duration files'
        run: |
          gh_pr_up() { gh pr create "$@" || gh pr edit "$@" }
          gh_pr_up --title "$PR_TITLE" --body ""