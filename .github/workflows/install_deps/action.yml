name: Install Dependencies
description: |
  This workflow installs Python, PennyLane and all its dependencies. If a
  requirements file is provided, it will upload the results of pip freeze
  as well.
inputs:
  python_version:
    description: The version of Python to use in order to run unit tests
    required: false
    default: '3.9'
  install_jax:
    description: Indicate if JAX should be installed or not
    required: false
    default: 'true'
  jax_version:
    description: The version of JAX to install for any job that requires JAX
    required: false
    default: 0.4.23
  install_tensorflow:
    description: Indicate if TensorFlow should be installed or not
    required: false
    default: 'true'
  tensorflow_version:
    description: The version of TensorFlow to install for any job that requires TensorFlow
    required: false
    default: 2.15.0
  install_pytorch:
    description: Indicate if PyTorch should be installed or not
    required: false
    default: 'true'
  pytorch_version:
    description: The version of PyTorch to install for any job that requires PyTorch
    required: false
    default: 2.2.0
  install_pennylane_lightning_master:
    description: Indicate if PennyLane-Lightning should be installed from the master branch
    required: false
    default: 'true'
  additional_pip_packages:
    description: Additional packages to install. Values will be passed to pip install {value}
    required: false
    default: ''
  requirements_file:
    description: File name to store stable version of requirements for a test group
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '${{ inputs.python_version }}'

    - name: Upgrade PIP
      shell: bash
      run: pip install --upgrade pip && pip install wheel --upgrade

    - name: Install PennyLane dependencies
      shell: bash
      run: |
        pip install -r requirements-ci.txt --upgrade
        pip install -r requirements-dev.txt --upgrade

    - name: Install PyTorch
      shell: bash
      if: inputs.install_pytorch == 'true'
      env:
        TORCH_VERSION: ${{ inputs.pytorch_version != '' && format('=={0}', inputs.pytorch_version) || '' }}
      run: pip install "torch${{ env.TORCH_VERSION }}" -f https://download.pytorch.org/whl/torch_stable.html

    - name: Install TensorFlow
      shell: bash
      if: inputs.install_tensorflow == 'true'
      env:
        TF_VERSION: ${{ inputs.tensorflow_version != '' && format('~={0}', inputs.tensorflow_version) || '' }}
      run: pip install "tensorflow${{ env.TF_VERSION }}" "keras${{ env.TF_VERSION }}"

    - name: Install JAX
      shell: bash
      if: inputs.install_jax == 'true'
      env:
        JAX_VERSION: ${{ inputs.jax_version != '' && format('=={0}', inputs.jax_version) || '' }}
      run: pip install "jax${{ env.JAX_VERSION}}" "jaxlib${{ env.JAX_VERSION }}"

    - name: Install additional PIP packages
      shell: bash
      if: inputs.additional_pip_packages != ''
      run: pip install ${{ inputs.additional_pip_packages }}

    - name: Install PennyLane
      shell: bash
      run: |
        python setup.py bdist_wheel
        pip install dist/PennyLane*.whl

    - name: Install PennyLane-Lightning master
      shell: bash
      if: inputs.install_pennylane_lightning_master == 'true'
      run: pip install -i https://test.pypi.org/simple/ PennyLane-Lightning --pre --upgrade

    - name: Freeze dependencies
      shell: bash
      if: inputs.requirements_file != ''
      run: pip freeze | grep -v "file:///" | sed 's/\(pennylane[-_]lightning==[0-9\.]\+\)\.dev[0-9]\+/\1/gI' > ${{ inputs.requirements_file }}

    - name: Upload frozen requirements
      if: inputs.requirements_file != ''
      uses: actions/upload-artifact@v4
      with:
        name: frozen-${{ inputs.requirements_file }}
        path: ${{ inputs.requirements_file }}
