name: Upload
on:
  release:
    types: [published]

env:
  TF_VERSION: 2.6.0
  TORCH_VERSION: 1.10.0+cpu


jobs:

  core-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        config:
          - { python-version: 3.7, interfaces: [ 'torch' ] }
          - { python-version: 3.7, interfaces: [ 'tf' ] }
          - { python-version: 3.8, interfaces: [ 'tf', 'torch', 'jax' ] }
          - { python-version: 3.9, interfaces: [ ] }
          - { python-version: '3.10', interfaces: [ ] }


    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.config.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ci.txt
          pip install wheel pytest pytest-cov pytest-mock flaky --upgrade

      - name: Conditionally install openfermionpyscf
        if: contains(' 3.9', matrix.config.python-version)
        run: pip3 install openfermionpyscf

      - name: Conditionally install PyTorch
        if: contains(matrix.config.interfaces, 'torch')
        run: pip3 install torch==$TORCH_VERSION -f https://download.pytorch.org/whl/torch_stable.html

      - name: Conditionally install TensorFlow
        if: contains(matrix.config.interfaces, 'tf')
        run: pip3 install tensorflow~=$TF_VERSION keras~=$TF_VERSION

      # Jax releases new version very frequently, so we should always build
      # to the latest release. We can always fix a version later if it breaks.
      - name: Conditionally install JAX
        if: contains(matrix.config.interfaces, 'jax')
        run: pip3 install jax jaxlib

      - name: Install KaHyPar
        run: pip3 install kahypar==1.1.7

      - name: Install PennyLane
        run: |
          pip install -r requirements-ci.txt
          python setup.py bdist_wheel
          pip install dist/PennyLane*.whl

      - name: Install Lightning-master
        run: python -m pip install -i https://test.pypi.org/simple/ PennyLane-Lightning --pre --upgrade

      - name: Run tests
        run: python -m pytest tests

  device-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        config:
          - { device: "default.qubit", shots: None }
          - { device: "default.qubit", shots: 10000 }
          # - {device: "default.qubit.tf", shots: None}
          - { device: "default.qubit.autograd", shots: None }
          - { device: "default.mixed", shots: None }

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ci.txt
          pip install wheel pytest pytest-cov pytest-mock flaky --upgrade

      - name: Conditionally install PyTorch
        if: contains(matrix.config.device, 'torch')
        run: pip3 install torch==$TORCH_VERSION -f https://download.pytorch.org/whl/torch_stable.html

      - name: Conditionally install TensorFlow
        if: contains(matrix.config.device, 'tf')
        run: pip3 install tensorflow~=$TF_VERSION

      - name: Conditionally install Jax
        if: contains(matrix.config.device, 'jax')
        run: pip3 install jax jaxlib

      - name: Install PennyLane
        run: |
          pip install -r requirements-ci.txt
          python setup.py bdist_wheel
          pip install dist/PennyLane*.whl

      - name: Run tests
        run: |
          python -m pytest pennylane/devices/tests \
            --device=${{ matrix.config.device }} \
            --shots=${{ matrix.config.shots }}

  upload:
    runs-on: ubuntu-latest
    # Make sure that the PennyLane is not released unless the tests are passing.
    needs: [core-tests, device-tests]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Build PennyLane wheel
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements-ci.txt
          python setup.py bdist_wheel

      - name: Publish
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI }}
