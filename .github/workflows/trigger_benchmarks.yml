name: Trigger Benchmarks
on:
  issue_comment:
    types:
      - created

env:
  REPO_OWNER: PennyLaneAI
  REPO_NAME: pennylane
  BENCHMARK_TRIGGER_COMMAND: /benchmark

jobs:
  trigger_benchmark_webhook:
    runs-on: ubuntu-latest

    # Only run for pull request comments (newly created)
    if: github.event.issue.pull_request

    steps:
      - name: Validate triggering repository
        id: source_repo
        run: echo "is_source_repo=${{ github.event.repository.full_name == format('{0}/{1}', env.REPO_OWNER, env.REPO_NAME) }}" >> $GITHUB_OUTPUT


      - name: Check Comment Body
        id: comment_body
        if: steps.source_repo.outputs.is_source_repo == 'true'
        run: echo "triggers_benchmark=${{ github.event.comment.body == env.BENCHMARK_TRIGGER_COMMAND }}" >> $GITHUB_OUTPUT

      - name: Check if commenter has write access
        id: comment_user
        if: steps.comment_body.outputs.triggers_benchmark == 'true'
        uses: actions/github-script@v7
        with:
          retries: 3
          result-encoding: string
          script: |
            const user = context.payload.sender.login;
            console.log(`Checking permissions for '${user}' on repository ${process.env.REPO_OWNER}/${process.env.REPO_NAME}}`);

            const { data: { permission } } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: process.env.REPO_OWNER,
              repo: process.env.REPO_NAME,
              username: user
            });
            console.log(`user_permission=${JSON.stringify(permission)}`);

            const user_has_write_access = permission === 'write' || permission === 'admin';
            console.log(`User has write acces => ${user_has_write_access}`);

            return user_has_write_access;
      
      - name: Trigger Benchmark Webhook
        if: steps.comment_body.outputs.triggers_benchmark == 'true' && steps.comment_user.outputs.result == 'true'
        uses: peter-evans/repository-dispatch@v3
        env:
          # The repo that is triggering the source webhook
          WEBHOOK_METADATA_SOURCE_REPO: ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}
          
          # The URL of the actual actions run that triggered the webhook
          WEBHOOK_METADATA_ACTIONS_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          # The username of the person who commented the trigger command on the pull request
          WEBHOOK_METADATA_GITHUB_ACTOR: ${{ github.event.comment.user.login }}
          WEBHOOK_METADATA_COMMENT_LINK: ${{ github.event.comment.html_url }}
          
          # Information regarding the pull request
          WEBHOOK_METADATA_PULL_REQUEST_NUMBER: ${{ github.event.issue.number }}
          WEBHOOK_METADATA_PULL_REQUEST_URL: ${{ github.event.issue.html_url }}
        with:
          token: ${{ secrets.PENNYLANE_BENCHMARKS_WEBHOOK_TOKEN }}  # TODO: This secret needs to be created (ringo?)
          repository: PennyLaneAI/${{ secrets.pennylane_benchmarks_repository_name }}  # TODO: This secret needs to be created
          event-type: pull-request-benchmark
          client-payload: |
            {
              "source_repo": "${{ env.WEBHOOK_METADATA_SOURCE_REPO }}",
              "actions_run_url": "${{ env.WEBHOOK_METADATA_ACTIONS_RUN_URL }}",
              "github_actor": "${{ env.WEBHOOK_METADATA_GITHUB_ACTOR }}",
              "pull_request_number": ${{ env.WEBHOOK_METADATA_PULL_REQUEST_NUMBER }},
              "pull_request_url": "${{ env.WEBHOOK_METADATA_PULL_REQUEST_URL }}",
              "comment_link": "${{ env.WEBHOOK_METADATA_COMMENT_LINK }}"
            }
          
      - name: React to original comment indicating webhook sent
        if: steps.comment_user.outputs.result == 'true' 
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: process.env.REPO_OWNER,
              repo: process.env.REPO_NAME,
              comment_id: context.payload.comment.id,
              content: '+1'
            });