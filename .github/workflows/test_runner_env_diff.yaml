name: Temp Test on runner env diff
on:
  pull_request:
  push:
    branches:
      - sc-98279-pl-blacksmith-runners

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  UV_SYSTEM_PYTHON: 1
  
jobs:
  show_env_setup:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - pl-4-core-large-runner
          - blacksmith-4vcpu-ubuntu-2404
  
    runs-on: ${{ matrix.runner }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: sc-98279-try-blacksmith-runners
          fetch-depth: 1
          repository: PennyLaneAI/pennylane
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: '0.6.5'
          enable-cache: true
          cache-dependency-glob: 'requirements-*.txt'
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Upgrade PIP and install wheel
        run: uv pip install --upgrade pip wheel setuptools>=75.8.1
      
      - name: Install PennyLane dependencies
        run: |
          uv pip install -r requirements-ci.txt -r requirements-dev.txt --upgrade
      
      - name: Install PennyLane
        shell: bash
        run: |
          uv build --wheel  
          uv pip install dist/pennylane*.whl
      
      - name: Set bash to verbose
        run: set -x
      
      
      - name: Print Platform Info
        run: |
          echo "Runner: ${{ matrix.runner }}"
          uname -a
          lsb_release -a || cat /etc/os-release
          python --version
          uv python --version
          pip --version
          uv pip --version
          python -c 'import platform; print(platform.platform()); print(platform.processor());'
      
      - name: Print CVXPY Solvers
        run: |
          python -c 'import cvxpy; print(cvxpy.installed_solvers())'
      
      - name: Print numpy info
        run: |
          python -c 'import numpy; print(numpy.__version__); print(numpy.show_config())'
      
      - name: Print pip packages
        run: |
          uv pip freeze
      
      - name: Run Kernel Tests
        run: python -m pytest tests --cov-config=.coveragerc --cov=pennylane --cov-append --cov-report=term-missing --cov-report=xml --no-flaky-report --tb=native -n auto --splits 6 --group 5  --durations-path=".github/durations/core_tests_durations.json" --store-durations --clean-durations --junit-xml=".github/test-reports/core-tests (1, 3.11).xml" -m "core and not qcut and not finite-diff and not param-shift"
