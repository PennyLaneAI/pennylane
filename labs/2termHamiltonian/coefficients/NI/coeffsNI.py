import numpy as np
import math


def coeffsNI(o: int, s: int, identifier = None, aba = 1):
    r"""
    Returns the coefficients of integrators designed for
    near integrable systems.

    Parameters
    -----------
    o: int
        order of the integrator
    s: int
        Number of stages
    identifier:
        Unique identifier given to the method.
        Necessary if there are multiple methods with same s and o

    Returns
    -----------
    lists

    Notes:
    -----------
    Check https://arxiv.org/abs/2401.01722, table 8.5 for the identifiers
    and recommended methods.
    """
    if (o[0]==2 and o[1]==2):
        s==1
        identifier == 'Strang'
        if (aba==1):
            a=[1/2 , 1/2]
            b=[1 , 0]
        else:
            a=[0, 1 ]
            b=[1/2 , 1/2]
    elif (o[0]==4 and o[1]==2):
        s=2
        if (aba==1):
            a1=(3-math.sqrt(3))/6
            a2=1-2*a1
            a3=a1
            b1=1/2
            b2=b1
            a=[a1 , a2 , a3]
            b=[b1 , b2 , 0]
        else:
            a1=1/2
            a2=a1
            b1=1/6
            b2=1-2*b1
            b3=b1
            a=[0, a1 , a2 ]
            b=[b1 , b2 , b3]
    elif (o[0]==6 and o[1]==2):
        s=3
        if (aba==1):
            a1=1/2-math.sqrt(3/20)
            a2=1/2-a1
            a3=a2
            a4=a1
            b1=5/18
            b2=1-2*b1
            b3=b1
            a=[a1 , a2 , a3 , a4]
            b=[b1 , b2 , b3 , 0]
        else:
            a1=(5-math.sqrt(5))/10
            a2=1-2*a1
            a3=a1
            b1=1/12
            b2=1/2-b1
            b3=b2
            b4=b1
            a=[0, a1 , a2 , a3 ]
            b=[b1 , b2 , b3 , b4]
    elif (o[0]==8 and o[1]==2):
        s=4
        if (aba==1):
            w1=math.sqrt((15+2*math.sqrt(30))/35)  
            w2=math.sqrt((15-2*math.sqrt(30))/35) 
            a1=(1-w1)/2
            a2=(w1-w2)/2
            a3=1-2*(a1+a2)
            a4=a2
            a5=a1
            b1=(18-math.sqrt(30))/72
            b2=1/2-b1
            b3=b2
            b4=b1
            a=[a1 , a2 , a3 , a4 , a5]
            b=[b1 , b2 , b3 , b4 , 0]
        else:
            a1=1/2 - math.sqrt(3/28)
            a2=1/2-a1
            a3=a2
            a4=a1
            b1=1/20
            b2=49/180
            b3=1-2*(b1+b2)
            b4=b2
            b5=b1
            a=[0, a1 , a2 , a3 , a4 ]
            b=[b1 , b2 , b3 , b4 , b5]
    elif (o[0]==8 and o[1]==4):
        s=5
        if (aba==1):
            a1= 0.07534696026989288842
            a2= 0.51791685468825678230
            a3=1/2-(a1+a2)
            a4=a3
            a5=a2
            a6=a1
            b1= 0.19022593937367661925
            b2= 0.84652407044352625706
            b3=1-2*(b1+b2)
            b4=b2
            b5=b1
            a=[a1 , a2 , a3 , a4 , a5 , a6]
            b=[b1 , b2 , b3 , b4 , b5 , 0]
        else:
            a1=-0.00758691311877447385
            a2=0.31721827797316981388
            a3=1-2*(a1+a2)
            a4=a2
            a5=a1
            b1=0.81186273854451628884
            b2=-0.67748039953216912289
            b3=1/2-(b1+b2)
            b4=b3
            b5=b2
            b6=b1
            a=[0, a1 , a2 , a3 , a4 , a5 ]
            b=[b1 , b2 , b3 , b4 , b5 , b6]
    elif (o[0]==10 and o[1]==4):
        # ABA method
        s = 7
        a1=0.04706710064597250612947887637243678556564
        b1= 0.1188819173681970199453503950853885936957
        a2= 0.1847569354170881069247376193702560968574
        b2=0.2410504605515015657441667865901651105675 
        a3= 0.2827060056798362053243616565541452479160 
        b3= -0.2732866667053238060543113981664559460630 
        a4=1/2-(a1+a2+a3) 
        #a4= -0.01453004174289681837857815229683813033908
        b4=  1-2*(b1+b2+b3)
        #b4=0.8267085775712504407295884329818044835997
        a=[a1 , a2 , a3 , a4 , a4 , a3 , a2 , a1]
        b=[b1 , b2 , b3 , b4 , b3 , b2 , b1 ,  0]
    elif (o[0]==8 and o[1]==6):
        # ABA method
        s = 7
        a1 = 0.0711334264982231177779387300061549964174
        a2 = 0.241153427956640098736487795326289649618
        a3 = 0.521411761772814789212136078067994229991
        # a4 =-0.333698616227678005726562603400438876027
        b1 = 0.183083687472197221961703757166430291072
        b2 = 0.310782859898574869507522291054262796375
        b3 =-0.0265646185119588006972121379164987592663
        # b4 = 0.0653961422823734184559721793911134363710        
        a4=1/2-(a1+a2+a3)
        b4=1-2*(b1+b2+b3)
        a=[a1 , a2 , a3 , a4 , a4 ,a3 , a2 , a1]
        b=[b1 , b2 , b3 , b4 , b3 , b2 , b1 , 0]
    elif (o[0]==10 and o[1]==6):
        # ABA method
        s = 8
        a1= 0.03809449742241219545697532230863756534060
        a2= 0.1452987161169137492940200726606637497442
        a3= 0.2076276957255412507162056113249882065158
        a4= 0.435909703651526159223154862401065184400
        a5=1-2*(a1+a2+a3+a4)
        b1= 0.09585888083707521061077150377145884776921
        b2= 0.2044461531429987806805077839164344779763
        b3= 0.2170703479789911017143385924306336714532
        b4=1/2-(b1+b2+b3)
        a=[a1 , a2 , a3 , a4 , a5 , a4 , a3 , a2 , a1]
        b=[b1 , b2 , b3 , b4 , b4 ,  b3 , b2 , b1 , 0]
    return a, b, s