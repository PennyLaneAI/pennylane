import os

import numpy as np
import pytest

from pennylane import qchem
from openfermion.hamiltonians import MolecularData

ref_dir = os.path.join(os.path.dirname(os.path.realpath(__file__)), "test_ref_files")

table_1 = np.array(
    [
        [0.0, 0.0, 0.0, 0.0, 0.68238953],
        [0.0, 1.0, 1.0, 0.0, 0.68238953],
        [1.0, 0.0, 0.0, 1.0, 0.68238953],
        [1.0, 1.0, 1.0, 1.0, 0.68238953],
        [0.0, 0.0, 2.0, 2.0, 0.17900058],
        [0.0, 1.0, 3.0, 2.0, 0.17900058],
        [1.0, 0.0, 2.0, 3.0, 0.17900058],
        [1.0, 1.0, 3.0, 3.0, 0.17900058],
        [0.0, 2.0, 0.0, 2.0, 0.17900058],
        [0.0, 3.0, 1.0, 2.0, 0.17900058],
        [1.0, 2.0, 0.0, 3.0, 0.17900058],
        [1.0, 3.0, 1.0, 3.0, 0.17900058],
        [0.0, 2.0, 2.0, 0.0, 0.67073278],
        [0.0, 3.0, 3.0, 0.0, 0.67073278],
        [1.0, 2.0, 2.0, 1.0, 0.67073278],
        [1.0, 3.0, 3.0, 1.0, 0.67073278],
        [2.0, 0.0, 0.0, 2.0, 0.67073278],
        [2.0, 1.0, 1.0, 2.0, 0.67073278],
        [3.0, 0.0, 0.0, 3.0, 0.67073278],
        [3.0, 1.0, 1.0, 3.0, 0.67073278],
        [2.0, 0.0, 2.0, 0.0, 0.17900058],
        [2.0, 1.0, 3.0, 0.0, 0.17900058],
        [3.0, 0.0, 2.0, 1.0, 0.17900058],
        [3.0, 1.0, 3.0, 1.0, 0.17900058],
        [2.0, 2.0, 0.0, 0.0, 0.17900058],
        [2.0, 3.0, 1.0, 0.0, 0.17900058],
        [3.0, 2.0, 0.0, 1.0, 0.17900058],
        [3.0, 3.0, 1.0, 1.0, 0.17900058],
        [2.0, 2.0, 2.0, 2.0, 0.70510563],
        [2.0, 3.0, 3.0, 2.0, 0.70510563],
        [3.0, 2.0, 2.0, 3.0, 0.70510563],
        [3.0, 3.0, 3.0, 3.0, 0.70510563],
    ]
)

table_2 = np.array(
    [
        [0.0, 0.0, 0.0, 0.0, 0.70510563],
        [0.0, 1.0, 1.0, 0.0, 0.70510563],
        [1.0, 0.0, 0.0, 1.0, 0.70510563],
        [1.0, 1.0, 1.0, 1.0, 0.70510563],
    ]
)

table_3 = np.array(
    [
        [0.0, 0.0, 0.0, 0.0, 0.48731097],
        [0.0, 1.0, 1.0, 0.0, 0.48731097],
        [1.0, 0.0, 0.0, 1.0, 0.48731097],
        [1.0, 1.0, 1.0, 1.0, 0.48731097],
        [0.0, 0.0, 0.0, 2.0, -0.04857958],
        [0.0, 1.0, 1.0, 2.0, -0.04857958],
        [1.0, 0.0, 0.0, 3.0, -0.04857958],
        [1.0, 1.0, 1.0, 3.0, -0.04857958],
        [0.0, 0.0, 2.0, 0.0, -0.04857958],
        [0.0, 1.0, 3.0, 0.0, -0.04857958],
        [1.0, 0.0, 2.0, 1.0, -0.04857958],
        [1.0, 1.0, 3.0, 1.0, -0.04857958],
        [0.0, 0.0, 2.0, 2.0, 0.01306398],
        [0.0, 1.0, 3.0, 2.0, 0.01306398],
        [1.0, 0.0, 2.0, 3.0, 0.01306398],
        [1.0, 1.0, 3.0, 3.0, 0.01306398],
        [0.0, 2.0, 0.0, 0.0, -0.04857958],
        [0.0, 3.0, 1.0, 0.0, -0.04857958],
        [1.0, 2.0, 0.0, 1.0, -0.04857958],
        [1.0, 3.0, 1.0, 1.0, -0.04857958],
        [0.0, 2.0, 0.0, 2.0, 0.01306398],
        [0.0, 3.0, 1.0, 2.0, 0.01306398],
        [1.0, 2.0, 0.0, 3.0, 0.01306398],
        [1.0, 3.0, 1.0, 3.0, 0.01306398],
        [0.0, 2.0, 2.0, 0.0, 0.22361004],
        [0.0, 3.0, 3.0, 0.0, 0.22361004],
        [1.0, 2.0, 2.0, 1.0, 0.22361004],
        [1.0, 3.0, 3.0, 1.0, 0.22361004],
        [0.0, 2.0, 2.0, 2.0, 0.00748417],
        [0.0, 3.0, 3.0, 2.0, 0.00748417],
        [1.0, 2.0, 2.0, 3.0, 0.00748417],
        [1.0, 3.0, 3.0, 3.0, 0.00748417],
        [2.0, 0.0, 0.0, 0.0, -0.04857958],
        [2.0, 1.0, 1.0, 0.0, -0.04857958],
        [3.0, 0.0, 0.0, 1.0, -0.04857958],
        [3.0, 1.0, 1.0, 1.0, -0.04857958],
        [2.0, 0.0, 0.0, 2.0, 0.22361004],
        [2.0, 1.0, 1.0, 2.0, 0.22361004],
        [3.0, 0.0, 0.0, 3.0, 0.22361004],
        [3.0, 1.0, 1.0, 3.0, 0.22361004],
        [2.0, 0.0, 2.0, 0.0, 0.01306398],
        [2.0, 1.0, 3.0, 0.0, 0.01306398],
        [3.0, 0.0, 2.0, 1.0, 0.01306398],
        [3.0, 1.0, 3.0, 1.0, 0.01306398],
        [2.0, 0.0, 2.0, 2.0, 0.00748417],
        [2.0, 1.0, 3.0, 2.0, 0.00748417],
        [3.0, 0.0, 2.0, 3.0, 0.00748417],
        [3.0, 1.0, 3.0, 3.0, 0.00748417],
        [2.0, 2.0, 0.0, 0.0, 0.01306398],
        [2.0, 3.0, 1.0, 0.0, 0.01306398],
        [3.0, 2.0, 0.0, 1.0, 0.01306398],
        [3.0, 3.0, 1.0, 1.0, 0.01306398],
        [2.0, 2.0, 0.0, 2.0, 0.00748417],
        [2.0, 3.0, 1.0, 2.0, 0.00748417],
        [3.0, 2.0, 0.0, 3.0, 0.00748417],
        [3.0, 3.0, 1.0, 3.0, 0.00748417],
        [2.0, 2.0, 2.0, 0.0, 0.00748417],
        [2.0, 3.0, 3.0, 0.0, 0.00748417],
        [3.0, 2.0, 2.0, 1.0, 0.00748417],
        [3.0, 3.0, 3.0, 1.0, 0.00748417],
        [2.0, 2.0, 2.0, 2.0, 0.33788228],
        [2.0, 3.0, 3.0, 2.0, 0.33788228],
        [3.0, 2.0, 2.0, 3.0, 0.33788228],
        [3.0, 3.0, 3.0, 3.0, 0.33788228],
    ]
)


@pytest.mark.parametrize(
    ("name", "core", "active", "v_table_exp", "v_core_exp"),
    [
        ("h2_pyscf", None, None, table_1, 0),
        ("h2_pyscf", [0], None, table_2, 1.3647790663040844),
        ("h2_pyscf", None, [0, 1], table_1, 0),
        ("h2_pyscf", [0], [1], table_2, 1.3647790663040844),
        ("lih", [0], [1, 2], table_3, 3.3171333741748206),
    ],
)
def test_table_two_particle(name, core, active, v_table_exp, v_core_exp, tol):
    r"""Test the table of two-particle matrix elements and the contribution of core orbitals
    as implemented in the `two_particle` function of the `obs` module"""

    hf_data = MolecularData(filename=os.path.join(ref_dir, name))

    v_table, v_core = qchem.two_particle(hf_data.two_body_integrals, core=core, active=active)

    assert np.allclose(v_table, v_table_exp, **tol)
    assert np.allclose(v_core, v_core_exp, **tol)
