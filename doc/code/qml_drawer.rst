qml.drawer
==========

The ``drawer`` module contains the code for generating visuals
of circuits. 

.. currentmodule:: pennylane.drawer

.. automodapi:: pennylane.drawer
    :no-heading:
    :no-inherited-members:
    :skip: available_styles
    :skip: use_style

Styling Matplotlib Circuit Graphics
-----------------------------------

The ``drawer`` module provides two functions for modifying the style of matplotlib
graphics, such as those generated by ``qml.draw_mpl``. The ``qml.drawer.use_style``
function modifies the ``plt.rcParams`` global styling variable.  Any styling can
be reset with ``qml.drawer.use_style('black_white')``.

.. autosummary::
    :toctree: api

    available_styles
    use_style

The following images are generated via the following code, where ``style`` is
replaced by an available style specification string (e.g., ``"pennylane"`` or
``"solarized_light"``):

.. code-block:: python

    @qml.qnode(qml.device('lightning.qubit', wires=(0,1,2,3)))
    def circuit(x, z):
        qml.QFT(wires=(0,1,2,3))
        qml.Toffoli(wires=(0,1,2))
        qml.CSWAP(wires=(0,2,3))
        qml.RX(x, wires=0)
        qml.CRZ(z, wires=(3,0))
        return qml.expval(qml.PauliZ(0))

    qml.drawer.use_style(style)
    fig, ax = qml.draw_mpl(circuit)(1.2345, 1.2345)

Note that the shown ``pennylane`` style can be replicated exactly by having the
Quicksand Bold font installed and refreshing the Matplotlib font cache (by
deleting the ``fontlist`` file in the Matplotlib cache directory) â€” to find the
cache directory, run ``matplotlib.get_cachedir()``. If this font is not
available, the drawer will fall back on a default font.

Wire Options
------------

The ``wire_options`` dictionary allows customization of the formatting for the wire lines in
the circuit visualization. This dictionary may contain standard matplotlib options
for line formatting, as well as entries with wire labels as keys and corresponding
dictionaries as values for specific wire line styling. For example, using keys such
as `color`, `linestyle`, and `linewidth` allows for per-wire customization.

.. code-block:: python

    # Define the quantum function with @qml.qnode
    @qml.qnode(dev)
    def wire1(x):
        qml.RX(x, wires=0)
        qml.Hadamard(wires=1)
        qml.CNOT(wires=[0, 1])
        return qml.expval(qml.PauliZ(0) @ qml.PauliY(1))

    # Draw the circuit
    fig, ax = qml.draw_mpl(wire1)(0.52)

    # All wires are orange
    wire_options = {"color": "orange"}
    fig, ax = qml.draw_mpl(wire1, wire_options=wire_options)(0.52)

    # Wires are orange and cyan
    wire_options = {
        0: {"color": "orange"},
        1: {"color": "cyan"}
    }
    fig, ax = qml.draw_mpl(wire1, wire_options=wire_options)(0.52) 

    @qml.qnode(dev)
    def wire1(x):
        for w in range(10):
            qml.Hadamard(w) 
        return qml.expval(qml.PauliZ(0) @ qml.PauliY(1))

    # Make all wires cyan and bold, 
    # except for wires 2 and 6, which are dashed and another color
    wire_options = {"color": "cyan", 
                    "linewidth": 5, 
                    2: {"linestyle": "--", "color": "red"}, 
                    6: {"linestyle": "--", "color": "orange"}
                }
    fig, ax = qml.draw_mpl(wire1, wire_options=wire_options)(0.52)

Currently Available Styles
^^^^^^^^^^^^^^^^^^^^^^^^^^
.. |bws| image:: ../_static/style/black_white_style.png
    :width: 100%

.. |bwd| image:: ../_static/style/black_white_dark_style.png
    :width: 100%

.. |sks| image:: ../_static/style/sketch_style.png
    :width: 100%

.. |pls| image:: ../_static/style/pennylane_style.png
    :width: 100%

.. |plw| image:: ../_static/style/pennylane_sketch_style.png
    :width: 100%

.. |skd| image:: ../_static/style/sketch_dark_style.png
    :width: 100%

.. |sol| image:: ../_static/style/solarized_light_style.png
    :width: 100%

.. |sod| image:: ../_static/style/solarized_dark_style.png
    :width: 100%

.. |def| image:: ../_static/style/default_style.png
    :width: 100%

+-----+-----+-----+
+|bws|+|bwd|+|sks|+
+-----+-----+-----+
+|pls|+|plw|+|skd|+
+-----+-----+-----+
+|sol|+|sod|+|def|+
+-----+-----+-----+